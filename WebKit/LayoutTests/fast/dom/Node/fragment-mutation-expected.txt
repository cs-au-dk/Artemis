This test creates a fragment containing three elements: "B", "U", and "P", attempts to appendChild this fragment and studies effects of mutation events on the fragment.

Inserting an element in front of the next item in fragment should not affect the result: PASS
Removing next item should not abort iteration: PASS
Appending an element at the end of the fragment should not affect the result: PASS
Continually re-appending removed element to the fragment should eventually throw NOT_FOUND_ERR: PASS
Moving next item to become previous sibling of the re-parentee should not result in stack exhaustion: PASS

This test creates a fragment containing three elements: "B", "U", and "P", attempts to insertBefore this fragment and studies effects of mutation events on the fragment.

Inserting an element in front of the next item in fragment should not affect the result: PASS
Removing next item should not abort iteration: PASS
Appending an element at the end of the fragment should not affect the result: PASS
Continually re-appending removed element to the fragment should eventually throw NOT_FOUND_ERR: PASS
Moving next item to become previous sibling of the re-parentee should not result in stack exhaustion: PASS


